plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    id 'nu.studer.jooq' version '3.0.3'
}

dependencies {
    compile project(path: ':networking')
    implementation 'com.google.protobuf:protobuf-java-util:3.11.0'

    // database stuff
    implementation 'org.jooq:jooq:3.13.0'
    implementation 'org.jooq:jooq-meta:3.13.0'
    jooqRuntime 'org.jooq:jooq-meta-extensions:3.13.0'
    implementation 'org.jooq:jooq-codegen:3.13.0'
    implementation 'mysql:mysql-connector-java:5.1.6'
    implementation 'org.flywaydb:flyway-core:6.1.4'


    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    jooqRuntime 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-text:1.4'
    implementation 'com.h2database:h2:1.4.199'
    implementation 'org.apache.commons:commons-math3:3.5'
    
    // YAML
    implementation 'org.yaml:snakeyaml:1.25'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.3'
    
    // web
    implementation 'au.com.codeka:carrot:2.4.2'

    compile 'com.github.minecraft-saar:shared-resources:release-1.1.18'
    compile group: 'io.github.classgraph', name: 'classgraph', version: '4.8.60'
}


startScripts.enabled = false

mainClassName = "de.saar.minecraft.broker.Broker"


jooq {
    version = '3.13.0'
    edition = 'OSS'
  
    minecraft(sourceSets.main) {
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            generate {
                javaTimeTypes = true
            }
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/db/migration/*.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'flyway'
                    }
                }
                forcedTypes {
                    forcedType {
                        userType = 'de.saar.minecraft.broker.db.GameStatus'
                        enumConverter = true
                        expression = '.*games.status'
                    }
                    forcedType {
                        userType = 'de.saar.minecraft.broker.db.GameLogsDirection'
                        enumConverter = true
                        expression = '.*game_logs.direction'
                    }
                }
            }
            target {
                packageName = 'de.saar.minecraft.broker.db'
             }
        }
    }
}

// Local Variables:
// groovy-indent-offset: 4
// indent-tabs-mode: nil
// End:
