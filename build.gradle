/*
java -cp
/Users/koller/.gradle/caches/modules-2/files-2.1/org.jooq/jooq/3.11.12/8e12ddb741821cddbe2589fcbd765c1e2d439ffa/jooq-3.11.12.jar:/Users/koller/.gradle/caches/modules-2/files-2.1/org.jooq/jooq-codegen/3.11.12/fb01333a1797795dcee9b5902f1e48890e711141/jooq-codegen-3.11.12.jar:/Users/koller/.gradle/caches/modules-2/files-2.1/org.jooq/jooq-meta/3.11.12/e6ad8a4b5bb02abb6a9627f483a50681337d682/jooq-meta-3.11.12.jar:/Users/koller/.gradle/caches/modules-2/files-2.1/mysql/mysql-connector-java/5.1.37/2c378637f6faff77541244e8257b446f04324bd8/mysql-connector-java-5.1.37.jar:. org.jooq.codegen.GenerationTool
database.xml
*/


plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.8'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'nu.studer.jooq' version '3.0.3'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenLocal()
}

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.23.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.9.0'
def protocVersion = protobufVersion

dependencies {
    // database stuff
    implementation "org.jooq:jooq:3.11.12"
    implementation "org.jooq:jooq-meta:3.11.12"
    implementation "org.jooq:jooq-codegen:3.11.12"
    implementation "mysql:mysql-connector-java:5.1.6"

    jooqRuntime "mysql:mysql-connector-java:5.1.6"

    // gRPC stuff
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.25.1"

    // YAML
    implementation "org.yaml:snakeyaml:1.25"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'src/generated/jooq/java'
            }
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/src/generated/jooq/java");
    }
}

startScripts.enabled = false

mainClassName = "de.saar.minecraft.matchmaker.Matchmaker"


// JOOQ code generation
// rebuild src/generated/jooq/** with "gradle --rerun-tasks generateMinecraftJooqSchemaSource"

jooq {
  version = '3.11.12'
  edition = 'OSS'
  
  minecraft(sourceSets.main) {
    jdbc {
      driver = 'com.mysql.jdbc.Driver'
      url = 'jdbc:mysql://localhost:3306/minecraft'
      user = 'root'
      
      properties {
        property {
          key = 'ssl'
          value = 'true'
        }
      }
    }
    
    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      strategy {
        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
      }
      
      database {
        name = 'org.jooq.meta.mysql.MySQLDatabase'
        inputSchema = 'minecraft'
	
        forcedTypes {
          forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'JSONB?'
          }
          forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'INET'
          }
        }
      }
      
      target {
        packageName = 'de.saar.minecraft.matchmaker.db'
	directory = 'src/generated/jooq/java'
      }
    }
  }
}